dependencies {
  compile project(':de.fu_berlin.inf.dpp.core')
  compile project(':de.fu_berlin.inf.dpp.ui')
  compile project(path: ':de.fu_berlin.inf.dpp.core', configuration: 'testing')
  compile project(path: ':de.fu_berlin.inf.dpp.ui', configuration: 'testing')

  compile fileTree(dir: eclipsePluginDir, include: '*.jar', exclude: '*commons.lang*')
  compile fileTree(dir: 'lib', include: '*.jar')

  // This is very ugly but necessary in order to build stf together with saros eclipse
  compile configurations.testConfig
}

sourceSets {
  main.java.srcDirs = ['src',
                       'ext-src',
                       'test/framework/stf/src/',
                       'test/framework/stf/test/',
                       'test/junit/',
                       'test/stf/']

  main {
    resources {
      srcDir 'src'
      exclude '**/*.java'
    }
  }

  test {
    java.srcDir 'test/junit/'
    resources.srcDir 'test/resources/'
  }
}

test {
  exclude '**/Abstract*'
  exclude '**/*TestSuite*'
}

tasks.withType(Test) {
  enableAssertions = false
}

jar {
  manifest {
    from file('META-INF/MANIFEST.MF')
    attributes('-removeheaders': 'Import-Package')
  }
  from sourceSets.main.output

  into('lib') {
    from 'lib'
    exclude '*source*.jar'
  }
  into('assets') {
    from 'assets'
  }
  into('icons') {
    from 'icons'
  }
  from('.') {
    include '*.properties'
    include 'readme.html'
    include 'plugin.xml'
    include 'version.comp'
    include 'LICENSE'
  }

  into('META-INF')
  {
    from 'META-INF'
    include 'stun-config.xml'
  }
}
